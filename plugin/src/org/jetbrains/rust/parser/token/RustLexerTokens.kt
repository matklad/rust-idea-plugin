package org.jetbrains.rust.parser.token

import org.jetbrains.rust.parser.RustTokenType

public object RustLexerTokens {
    public val ID: RustTokenType = RustTokenType("ID")

    public val KW_AS: RustTokenType = RustTokenType("as")
    public val KW_BREAK: RustTokenType = RustTokenType("break")
    public val KW_CONST: RustTokenType = RustTokenType("const")
    public val KW_CRATE: RustTokenType = RustTokenType("crate")
    public val KW_ELSE: RustTokenType = RustTokenType("else")
    public val KW_ENUM: RustTokenType = RustTokenType("enum")
    public val KW_EXTERN: RustTokenType = RustTokenType("extern")
    public val KW_FALSE: RustTokenType = RustTokenType("false")
    public val KW_FN: RustTokenType = RustTokenType("fn")
    public val KW_FOR: RustTokenType = RustTokenType("for")
    public val KW_IF: RustTokenType = RustTokenType("if")
    public val KW_IMPL: RustTokenType = RustTokenType("impl")
    public val KW_IN: RustTokenType = RustTokenType("in")
    public val KW_LET: RustTokenType = RustTokenType("let")
    public val KW_LOOP: RustTokenType = RustTokenType("loop")
    public val KW_MATCH: RustTokenType = RustTokenType("match")
    public val KW_MOD: RustTokenType = RustTokenType("mod")
    public val KW_MUT: RustTokenType = RustTokenType("mut")
    public val KW_PRIV: RustTokenType = RustTokenType("priv")
    public val KW_PROC: RustTokenType = RustTokenType("proc")
    public val KW_MOVE: RustTokenType = RustTokenType("move")
    public val KW_PUB: RustTokenType = RustTokenType("pub")
    public val KW_REF: RustTokenType = RustTokenType("ref")
    public val KW_RETURN: RustTokenType = RustTokenType("return")
    public val KW_SELF: RustTokenType = RustTokenType("self")
    public val KW_STATIC: RustTokenType = RustTokenType("static")
    public val KW_STRUCT: RustTokenType = RustTokenType("struct")
    public val KW_SUPER: RustTokenType = RustTokenType("super")
    public val KW_TRUE: RustTokenType = RustTokenType("true")
    public val KW_TRAIT: RustTokenType = RustTokenType("trait")
    public val KW_TYPE: RustTokenType = RustTokenType("type")
    public val KW_UNSAFE: RustTokenType = RustTokenType("unsafe")
    public val KW_USE: RustTokenType = RustTokenType("use")
    public val KW_WHILE: RustTokenType = RustTokenType("while")
    public val KW_CONTINUE: RustTokenType = RustTokenType("continue")
    public val KW_BOX: RustTokenType = RustTokenType("box")
    public val KW_WHERE: RustTokenType = RustTokenType("where")
}
